javascript:!async function(){const e=e=>new Promise(t=>setTimeout(t,e));console.log("=== CIO DIG ALL DOMAINS VERSION ===");async function t(){const e=[],t=document.querySelectorAll(".fly-panel");return console.log(`Checking ${t.length} panels for domains...`),t.forEach((t,n)=>{const o=t.querySelector("h3.fly-panel-title, .fly-panel-title, h3"),r=o?o.textContent.trim():null,a=t.querySelector(".fly-panel-body");if(!r||!a||!r.includes("."))return;console.log(`\n--- Processing panel ${n}: "${r}" ---`);const c=[];if(a.querySelectorAll('input[aria-label*="Record"]').length>0){console.log("Found record inputs - extracting DNS records");const e=a.querySelectorAll("input, textarea");for(let t=0;t<e.length;t++){const n=e[t];if("Record type"===(n.getAttribute("aria-label")||"")){const o=n,a=e[t+1],l=e[t+2],s=e[t+3];if(a&&l&&"Record host name"===a.getAttribute("aria-label")&&"Record formatted value"===l.getAttribute("aria-label")){let e=o.value.trim().toUpperCase(),n=a.value.trim().replace(/\.$/,""),u=l.value.trim().replace(/\.$/,"");if("MX"===e&&s&&"Record priority"===s.getAttribute("aria-label")){const n=s.value.trim();u=`${n} ${u}`,t++}(""===n||n===r)&&(n="@"),["A","CNAME","MX","TXT","NS"].includes(e)||(e="TXT"),u&&(c.push({type:e,host:n,value:u}),console.log(`Added record: ${e} ${n} ${u}`)),t+=2}}}}else console.log("No record inputs found - domain records not currently expanded");const l={domain:r,expected:c};e.push(l),console.log(`Domain "${r}": ${c.length} records`)}),e}try{console.log("--- Checking for already visible domains ---");let n=await t();console.log("\n--- Trying to expand any collapsed panels ---");const o=Array.from(document.querySelectorAll("button")).filter(e=>e.textContent.trim().includes("Show record")||"Show Records"===e.textContent.trim());console.log(`Found ${o.length} expand buttons to click`);for(const t of o)console.log("Clicking button:",t.textContent.trim()),t.click(),await e(200);await e(1e3),console.log("--- Extracting after expansion ---");let r=await t();const a=[],c=new Set([...n.map(e=>e.domain),...r.map(e=>e.domain)]);for(const e of c){const t=n.find(t=>t.domain===e),o=r.find(t=>t.domain===e);o&&(!t||o.expected.length>t.expected.length)?a.push(o):t&&a.push(t)}if(console.log("\n=== FINAL ALL DOMAINS PAYLOAD ==="),console.log(JSON.stringify(a,null,2)),0===a.length)return void alert("No domains found to extract.");const l=btoa(JSON.stringify(a)),s=`https://cio-dns-checker.replit.app/?data=${encodeURIComponent(l)}`;console.log(`\nFound ${a.length} domains total:`),a.forEach(e=>{console.log(`- ${e.domain}: ${e.expected.length} records`)}),console.log("\nOpening URL:",s),window.open(s)}catch(e){console.error("CIO DIG Error:",e),alert("Error extracting DNS records. Check console for details.")}}();