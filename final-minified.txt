javascript:!async function(){const e=e=>new Promise(t=>setTimeout(t,e));console.log("=== CIO DIG FINAL VERSION ===");async function t(){const e=[];document.querySelectorAll(".fly-panel").forEach((t,n)=>{const o=t.querySelector("h3.fly-panel-title, .fly-panel-title, h3"),r=o?o.textContent.trim():null,a=t.querySelector(".fly-panel-body");if(r&&a){const t=a.querySelectorAll('input[aria-label*="Record"]').length>0;t&&(e.push({domainName:r,panelBody:a}),console.log(`Found domain panel: "${r}" with ${a.querySelectorAll('input[aria-label*="Record"]').length} record inputs`))}});const t=[];for(const{domainName:n,panelBody:o}of e){console.log(`Processing domain: ${n}`);const e=[],r=o.querySelectorAll("input, textarea");for(let t=0;t<r.length;t++){const o=r[t];if("Record type"===(o.getAttribute("aria-label")||"")){const a=o,c=r[t+1],l=r[t+2],s=r[t+3];if(c&&l&&"Record host name"===c.getAttribute("aria-label")&&"Record formatted value"===l.getAttribute("aria-label")){let o=a.value.trim().toUpperCase(),r=c.value.trim().replace(/\.$/,""),u=l.value.trim().replace(/\.$/,"");if("MX"===o&&s&&"Record priority"===s.getAttribute("aria-label")){const e=s.value.trim();u=`${e} ${u}`,t++}(""===r||r===n)&&(r="@"),["A","CNAME","MX","TXT","NS"].includes(o)||(o="TXT"),u&&(e.push({type:o,host:r,value:u}),console.log(`Added record: ${o} ${r} ${u}`)),t+=2}}}e.length>0&&t.push({domain:n,expected:e})}return t}try{const n=Array.from(document.querySelectorAll("button")).filter(e=>e.textContent.trim().includes("Show record")||"Show Records"===e.textContent.trim());console.log(`Clicking ${n.length} expand buttons`);for(const t of n)t.click(),await e(200);await e(1e3),console.log("\n--- First extraction attempt ---");let o=await t();await e(1e3),console.log("\n--- Second extraction attempt ---");let r=await t();const a=[...o];for(const e of r){const t=a.findIndex(t=>t.domain===e.domain);t>=0?e.expected.length>a[t].expected.length&&(a[t]=e,console.log(`Updated domain ${e.domain} with ${e.expected.length} records`)):(a.push(e),console.log(`Added new domain ${e.domain} with ${e.expected.length} records`))}if(console.log("\n=== FINAL COMBINED PAYLOAD ==="),console.log(JSON.stringify(a,null,2)),0===a.length)return void alert("No DNS records found to extract.");const c=btoa(JSON.stringify(a)),l=`https://cio-dns-checker.replit.app/?data=${encodeURIComponent(c)}`;console.log("Opening URL:",l),window.open(l)}catch(e){console.error("CIO DIG Error:",e),alert("Error extracting DNS records. Check console for details.")}}();